import { WitnessTester } from "circomkit";
import { circomkit } from "./common";

describe("HKDF", () => {
  describe("Expand", () => {
    let circuit: WitnessTester<["secret", "key"], ["out"]>;
    before(async () => {
      circuit = await circomkit.WitnessTester(`Expand`, {
        file: "hkdf",
        template: "Expand",
        params: [32, 32],
      });
      console.log("#constraints:", await circuit.getConstraintCount());
    });

    it("should expand master key from secret", async () => {
      await circuit.expectPass(
        {
          secret: [
            0x10, 0xd9, 0xcb, 0x53, 0xd1, 0xa4, 0x05, 0xcf, 0xe2, 0x68, 0x6e, 0x08, 0x35, 0x90, 0x4d, 0x48, 0x43, 0x5e,
            0x80, 0x54, 0xa7, 0x9f, 0x98, 0x56, 0x83, 0xd0, 0xff, 0x72, 0x59, 0xf7, 0xa8, 0x04,
          ],
          key: [
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          ],
        },
        {
          out: [
            0x8b, 0xeb, 0x33, 0x8d, 0x43, 0x1d, 0x24, 0x3c, 0xee, 0xaa, 0xa6, 0xf0, 0xcb, 0x57, 0x26, 0xfb, 0xc5, 0xa3,
            0x5c, 0x5e, 0x45, 0xbf, 0x99, 0x2c, 0xc3, 0xe2, 0x3b, 0x5b, 0xc2, 0xe4, 0xcc, 0xea,
          ],
        }
      );
    });
  });
  describe("Extract", () => {
    let circuit: WitnessTester<["info", "key"], ["out"]>;
    before(async () => {
      circuit = await circomkit.WitnessTester(`Extract`, {
        file: "hkdf",
        template: "Extract",
        params: [0, 32, 2, 16],
      });
      console.log("#constraints:", await circuit.getConstraintCount());
    });

    it("should extract two 16 bytes keys from key", async () => {
      await circuit.expectPass(
        {
          info: [],
          key: [
            0x8b, 0xeb, 0x33, 0x8d, 0x43, 0x1d, 0x24, 0x3c, 0xee, 0xaa, 0xa6, 0xf0, 0xcb, 0x57, 0x26, 0xfb, 0xc5, 0xa3,
            0x5c, 0x5e, 0x45, 0xbf, 0x99, 0x2c, 0xc3, 0xe2, 0x3b, 0x5b, 0xc2, 0xe4, 0xcc, 0xea,
          ],
        },
        {
          out: [
            [0x5b, 0x02, 0xd2, 0x11, 0x3a, 0xbb, 0x74, 0x49, 0xc3, 0x7d, 0x57, 0xe0, 0xc7, 0x7a, 0x99, 0xc4],
            [0x43, 0x7a, 0xb4, 0xc1, 0x85, 0x2f, 0xa9, 0xcc, 0x8e, 0xc5, 0xbd, 0x64, 0x97, 0xf0, 0x31, 0x91],
          ],
        }
      );
    });
  });
});
